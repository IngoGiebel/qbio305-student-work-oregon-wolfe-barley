---
title: "QBio305 - Genetic analysis of phenotypic variation measured in the Oregon Wolfe Barley collection"
author: "Ingo Giebel"
date: today
lang: en-US
eol: lf
resource-path: 
  - .
  - ..
  - ../docs
  - ../results
bibliography: bibliography.bib
csl: apa
self-contained: true
self-contained-math: true
title-block-banner: true
page-layout: full
toc: true
toc-location: left
toc-expand: 3
number-sections: true
code-tools: true
code-link: true
code-fold: true
code-overflow: wrap
fig-format: retina
fig-align: left
fig-responsive: true
fig-width: 9.5
fig-height: 6.5
smooth-scroll: true
format:
  html:
    theme:
      light: flatly
      dark: darkly
    grid:
      sidebar-width: 450px
      body-width: 900px
    html-math-method: mathjax
knitr:
  opts_chunk:
    warning: false
    message: false
execute:
  cache: true
  freeze: auto
editor: visual
---

::: {.callout-note appearance="minimal"}
{{< include ../LICENSE.md >}}
:::

# R Packages and options

## Load the required packages

```{r}
#| code-summary: "Load the required packages"
#| output: false

# For determining the project root
library(here)
# For transforming and representing data
library(tidyverse)
# For printing tables
library(gt)
# For plotting
library(ggpubr)
# For Levene's test
library(car)
# For linkage analysis
library(qtl)
```

## Set R options for scientific notation

```{r}
#| code-summary: "Set R options for scientific notation"
#| output: false

options(scipen = 1)
options(pillar.sigfig = 4)
```

# Data import

## Determine the file paths of the raw data

```{r}
#| code-summary: "Determine the file paths of the raw data relative to the project's base directory"
#| output: false

dta_owb_genetic_map_file_path <- here::here(
  "data",
  "dta_owb_genetic_map.csv"
)

dta_owb_height_and_spike_length_by_genotype_file_path <- here::here(
  "data",
  "dta_owb_height_and_spike_length_by_genotype.csv"
)

dta_owb_linkage_map_qualt_phenotypes_file_path <- here::here(
  "data",
  "dta_owb_linkage_map_qualt_phenotypes.csv"
)
```

## Read in the raw data

```{r}
#| code-summary: "Read in the raw data: the quantitative data of the different OWB genotypes, the genetic map of OWB, and the qualitative phenotypes data"
#| output: false

# Read in the raw quantitative data of the different OWB genotypes
dta_quant_raw <- car::strings2factors(
  readr::read_csv(dta_owb_height_and_spike_length_by_genotype_file_path),
  verbose = FALSE
)

# Read in the genetic map of OWB
dta_owb_genetic_map <- readr::read_csv(
  dta_owb_genetic_map_file_path
)

# Read in linkage map and qualitative phenotypes as denoted in
# marker annotation
dta_linkage_map_qualt_phenotypes <- qtl::read.cross(
  format = "csv",
  file = dta_owb_linkage_map_qualt_phenotypes_file_path,
  genotypes = c("a", "b"),
  alleles = c("a", "b"),
  crosstype = "dh"
)
```

# Analyses for plant height

## Function definitions

```{r}
#| code-summary: "Functions for plotting a histogram of ANOVA residuals and for conducting a phenotype ~ marker ANOVA for each marker within a given list of markers"

# Plot a histogram of the residuals
plot_residuals_hist <- function(data_aov, xlab) {
  res <- data_aov$residuals
  ggplot2::ggplot(
    data = data.frame(
      1:length(res),
      res
    ),
    mapping = ggplot2::aes(x = res),
  ) +
    ggplot2::geom_histogram(
      mapping = ggplot2::aes(y = ggplot2::after_stat(width * density)),
      color = "darkgrey",
      bins = 50
    ) +
    ggplot2::stat_function(
      fun = dnorm,
      args = list(
        mean = mean(res),
        sd = sd(res)
      ),
      color = "darkred"
    ) +
    ggplot2::labs(
      x = xlab,
      y = "Density"
    )
}

# Conduct an ANOVA of phenotype ~ marker for each marker within marker_names
anova_all_markers <- function(data, genetic_map, phenotype, marker_names) {
  # Tibble for the markers, theirs positions and significance values for the
  # phenotype
  marker_pval_df <- tibble::tibble(
    marker = character(),
    chr = character(),
    pos = numeric(),
    pval = numeric()
  )

  # Loop through all markers and conduct ANOVAs for each one of them
  for (marker_name in marker_names) {
    # Extract the marker's genetic position from the genetic map
    marker_chr_pos <- dplyr::filter(genetic_map, marker == marker_name)
    # Conduct an one-way ANOVA of the phenotype vs the marker
    marker_aov <- aov(
      as.formula(paste(phenotype, "~", marker_name)),
      data = data
    )
    # Extract the marker's p-value from the ANOVA table
    pval <- summary(marker_aov)[[1]][1, 5]
    # Add a new row for the marker, its position, and its p-value
    marker_pval_df <-
      marker_pval_df |>
      tibble::add_row(marker_chr_pos, pval)
  }

  marker_pval_df
}
```

## Analyzing the raw data

### Height comparison for the different genotypes

```{r}
#| code-summary: "Densitiy plot comparing the height of the different genotypes"

# Densitiy plot comparing the height of the different genotypes
ggpubr::ggdensity(
  data = dta_quant_raw,
  x = "Height",
  add = "mean",
  color = "Genotype",
  fill = "Genotype",
  xlab = "Height in cm",
  ylab = "Density",
) +
  ggplot2::theme(legend.justification = c("left", "top")) +
  ggplot2::guides(
    colour = ggplot2::guide_legend(
      title.position = "top",
      nrow = 6,
      byrow = TRUE
    )
  )
```

```{r}
#| code-summary: "Summary statistics per genotype"

# Summary statistics per genotype
dta_quant_raw |>
  dplyr::select(Genotype, Height) |>
  dplyr::group_by(Genotype) |>
  dplyr::summarise(
    Count = n(),
    Mean = mean(Height),
    Sd = sd(Height)
  ) |>
  gt::gt() |>
  gt::fmt_number(
    columns = Mean,
    decimals = 1
  ) |>
  gt::fmt_number(
    columns = Sd,
    decimals = 2
  ) |>
  gt::opt_stylize() |>
  gt::tab_options(
    table.align = "left",
    container.width = gt::px(900)
  ) |>
  gt::opt_interactive(
    use_highlight = TRUE,
    use_compact_mode = TRUE,
    use_page_size_select = TRUE
  )
```

### ANOVA height \~ genotype

```{r}
#| code-summary: "Height ~ genotype ANOVA"

# Fit an ANOVA for the height ~ genotype
height_raw_aov <- aov(Height ~ Genotype, data = dta_quant_raw)

# Summary of the ANOVA analysis
summary(height_raw_aov)
```

**Result:** The genotype has a significant effect on the plant height (p-value \< $2 \times 10^{-16}$).

### Check the homogeneity of the raw data

ANOVA assumes that the data are normally distributed and that the variance across the groups is approximately equal. These assumptions are assessed with some diagnostic plots and tests.

```{r}
#| code-summary: "Plot the ANOVA residuals vs fit in order to check the homogeneity of variance assumption"

# Plot the ANOVA residuals vs fit in order to check the homogeneity
# of variance assumption
plot(height_raw_aov, which = 1)
```

```{r}
#| code-summary: "Levene's test for homogeneity of variance across groups"

# Levene's test for homogeneity of variance across groups
car::leveneTest(Height ~ Genotype, data = dta_quant_raw)
```

**Result:** The variances are roughly homogeneous. The p-value for the Levene's test of the raw data is 0.7938. This means that the variances within the groups are not significantly different from each other, i.e., the homogeneity assumption of the variance is met. The rows 14, 40, and 182 are detected as outliers, which can severely affect normality and homogeneity of the variance. Therefore, these outliers (in the genotypes OWB33, OWB76, and OWB54) will be removed to meet the test assumptions.

### Check the normality of the raw data

```{r}
#| code-summary: "Plot a histogram of the ANOVA residuals"
#| label: fig-raw_aov_height_residuals_histogram
#| fig-cap: "Histogram of the ANOVA residuals - raw data"

# Plot a histogram of the ANOVA residuals
plot_residuals_hist(
  height_raw_aov,
  "Residuals of the ANOVA height ~ genotype"
)
```

```{r}
#| code-summary: "Create a Q-Q plot of the ANOVA residuals"
#| label: fig-raw_aov_height_residuals_qq
#| fig-cap: "Q-Q plot of the ANOVA residuals - raw data"

# Q-Q plot of the ANOVA residuals
plot(height_raw_aov, which = 2)
```

```{r}
#| code-summary: "Create a Cook's distance plot"
#| label: fig-raw_aov_height_residuals_cooks_dist
#| fig-cap: "Cook's distance plot of the ANOVA residuals - raw data"

# Cook's distance plot
plot(height_raw_aov, which = 4)
```

```{r}
#| code-summary: "Shapiro-Wilk test for normality"

# Shapiro-Wilk test for normality
shapiro.test(height_raw_aov$residuals)
```

**Result:** According to the Shapiro-Wilk test for normality, it is unlikely that the raw data is normally distributed (p-values \< $2.2 \times 10^{-16}$). Nevertheless, the plots reveal that the data conform at least roughly to a normal distribution, in particular without the three outliers. Therefore, the further analysis will be done using ANOVA with cleansed data (without the outliers).

## Analyzing the cleansed data

### Cleanse the data

```{r}
#| code-summary: "Remove outliers (data cleansing)"

# Remove outliers
dta_quant_clean <- dta_quant_raw[-c(14, 40, 182), ]
```

### ANOVA height \~ genotype

```{r}
#| code-summary: "Height ~ genotype ANOVA (cleansed data)"

# ANOVA for the height (cleansed data)
height_clean_aov <- aov(Height ~ Genotype, data = dta_quant_clean)

# Summary of the ANOVA analysis
summary(height_clean_aov)
```

### Check the normality of the cleansed data

```{r}
#| code-summary: "Plot a histogram of the ANOVA residuals"
#| label: fig-clean_aov_height_residuals_histogram
#| fig-cap: "Histogram of the ANOVA residuals - clean data"

# Plot a histogram of the ANOVA residuals
plot_residuals_hist(
  height_clean_aov,
  "Residuals of the ANOVA height ~ genotype"
)
```

```{r}
#| code-summary: "Create a Q-Q plot of the ANOVA residuals"
#| label: fig-clean_aov_height_residuals_qq
#| fig-cap: "Q-Q plot of the ANOVA residuals - clean data"

# Q-Q plot of the ANOVA residuals
plot(height_clean_aov, which = 2)
```

```{r}
#| code-summary: "Create a Cook's distance plot"
#| label: fig-clean_aov_height_residuals_cooks_dist
#| fig-cap: "Cook's distance plot of the ANOVA residuals - clean data"

# Cook's distance plot
plot(height_clean_aov, which = 4)
```

```{r}
#| code-summary: "Shapiro-Wilk test for normality"

# Shapiro-Wilk test for normality
shapiro.test(height_clean_aov$residuals)
```

**Result:** According to the Shapiro-Wilk test for normality, it is still unlikely that the cleansed data is normally distributed (p-value = $7.823 \times 10^{-14}$. Nevertheless, the plots reveal that the data conform at least roughly to a normal distribution, in particular without the removed three outliers.

### QTL analysis of plant height

```{r}
#| code-summary: "Create a Manhattan plot with the genome-wide p-values for the markers"
#| label: fig-clean_height_marker_effects_manhattan
#| fig-cap: "Manhattan plot of the genome-wide p-values for the genetic markers"

marker_pval_df <- anova_all_markers(
  dta_quant_clean,
  dta_owb_genetic_map,
  "Height",
  colnames(dta_quant_clean)[5:ncol(dta_quant_clean)]
)

# Calculate the Bonferroni corrected significance threshold. The Bonferroni
# correction adjusts the chosen significance level (here 5 %) by dividing it
# by the number of tests.
sig_thld_bonfcorr <- 0.05 / nrow(marker_pval_df)

# Create a data frame that follows the requirements of the
# Manhattan command of the qqman library
marker_pval_manhattan_plot_df <- marker_pval_df |>
  dplyr::mutate(CHR = as.numeric(gsub("H", "", chr))) |>
  dplyr::rename(BP = pos) |>
  dplyr::mutate(SNP = 1:n(), .before = pval) |>
  dplyr::select(CHR, BP, SNP, pval)

# Manhattan plot of the genome-wide p-values for the markers
qqman::manhattan(
  marker_pval_manhattan_plot_df,
  genomewideline = -log(sig_thld_bonfcorr),
  suggestiveline = FALSE,
  logp = TRUE,
  p = "pval",
  lwd = 3,
  ylab = "p-value (neg. log)"
)
```

```{r}
#| code-summary: "Determine all gene positions which have p-value less than the Bonferroni corrected p-value"

# Determine all gene positions which have p-value less than the
# Bonferroni corrected p-value
marker_pval_sig_df <- marker_pval_df |>
  dplyr::filter(pval < sig_thld_bonfcorr) |>
  dplyr::rename(Chr = chr) |>
  dplyr::group_by(Chr) |>
  dplyr::summarise(
    Count = n(),
    "Min p-val" = min(pval),
    "Median p-val" = median(pval),
    "Min pos" = min(pos),
    "Max pos" = max(pos)
  )
marker_pval_sig_df
```

**Result:** The plant height is mainly significantly effected by a genomic region within gene 2H. But there are also markers within the genes 1H, 3H, 5H, and 6H which have a significant impact on the plant height.

# Genetic linkage mapping of the leaf variegation trait

## Function definitions

```{r}
#| code-summary: "Functions for determining the LOD scores of a given phenotypic marker and for mapping it to the most likely locus responsible for the trait"

# Determine the LOD scores of the given marker for all possible positions
calc_load_scores <- function(linkage_map, phenotype) {
  # Try all possible positions for the marker, keeping all other markers
  # fixed, and evaluate the log likelihood and estimate the chromosome length
  qtl::tryallpositions(
    linkage_map,
    marker = phenotype,
    verbose = FALSE
  )
}

# Map the qualitative marker to the most likely locus responsible for
# the trait. Returns an updated linkage map.
map_qualt_trait <- function(linkage_map, phenotype, lod_scores) {
  # Determine the LOD entry with the highes LOD score
  best_marker_pos <- dplyr::slice_max(lod_scores, n = 1, lod)

  # Move the phenotype marker to the position with the highest LOD score
  qtl::movemarker(
    linkage_map,
    marker = phenotype,
    newchr = dplyr::select(best_marker_pos, chr)[1, 1],
    newpos = dplyr::select(best_marker_pos, pos)[1, 1]
  )
}
```

## Calculate the LOD scores

```{r}
#| code-summary: "Determine the LOD scores of the leaf variegation for all possible positions"

# Determine the LOD scores of the leaf variegation for all possible positions
load_scores <- calc_load_scores(
  dta_linkage_map_qualt_phenotypes,
  "leaf_variegation"
)
tibble::as_tibble(summary(load_scores))
```

## Leaf variegation mapping

```{r}
#| code-summary: "Map the leaf variegation marker to the most likely locus responsible for the trait and plot the updated linkage map"
#| label: fig-link_map_leaf_variegation
#| fig-cap: "Genetic linkage mapping of the leaf variegation trait leaf_var (moved to the position with the highest LOD score of 3.83)"

# Map the leaf variegation marker to the most likely locus responsible
# for the trait
dta_linkage_map_qualt_phenotypes <- map_qualt_trait(
  dta_linkage_map_qualt_phenotypes,
  "leaf_variegation",
  load_scores
)

# Plot the updated linkage map
qtl::plotMap(dta_linkage_map_qualt_phenotypes,
  main = "",
  show.marker.names = TRUE
)
```

**Result:** The leaf variegation of the Oregon Wolfe barley collection is significantly effected by the chromosome 2H at position 192.8. @fig-link_map_leaf_variegation shows the linkage mapping of that trait. According to @giménez2021, the leaf variegation is controlled by the gene *Wst*. @fig-gimenez2021-molecular-marker-locations shows their phenotypic trait mapping results, which are in accordance with these findings.

[![Phenotypic traits mapping of the Oregon Wolfe Barley population. From "An F2 barley population as a tool for teaching mendelian genetics", by Giménez, E., Benavente, E., Pascual, L., García-Sampedro, A., López-Fernández, M., Vázquez, J. F., & Giraldo, P., 2021, Plants, 10(4), p. 694 (https://doi.org/10.3390/plants10040694#sec2-plants-10-00694).](../docs/gimenez2021-fig3.webp){#fig-gimenez2021-molecular-marker-locations}](https://doi.org/10.3390/plants10040694#sec2-plants-10-00694)

# References {.unnumbered}

::: {#refs}
:::

# Appendix: Version information {.unnumbered}

::: {#r_pkg_version_info .callout-note collapse="true" appearance="minimal"}
## R session info with information on the R version as well as the packages that were loaded

```{r}
#| code-fold: false
#| message: true

message(paste(capture.output(sessionInfo()), "\n", collapse = ""))
```
:::

# Appendix: Source code {.unnumbered}

::: {#r_source_code .callout-note collapse="true" appearance="minimal"}
## The R source code for this research report

```{r ref.label=knitr::all_labels()}
#| code-fold: false
#| eval: false
```
:::
